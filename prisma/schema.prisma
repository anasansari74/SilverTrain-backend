// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialActions", "selectRelationCount"]
}

enum Role {
  USER
  ADMIN
}

model User {
  id       Int    @id @default(autoincrement())
  userName String @unique
  password String

  role Role @default(USER)

  userInfo UserInfo?

  trainRide TrainRide[]
}

model UserInfo {
  id          Int      @id @default(autoincrement())
  firstName   String
  lastName    String
  bio         String
  dateOfBirth DateTime

  userId Int
  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum Class {
  ECONOMY
  BUSINESS
}

enum RideStatus {
  ONGOING
  CANCELLED
}

// trainRideId ?

model TrainRide {
  id                Int      @id @default(autoincrement())
  departureLocation String
  departureTime     String
  arrivalLocation   String
  arrivalTime       String
  date              DateTime
  price             Float

  class      Class      @default(ECONOMY)
  rideStatus RideStatus @default(ONGOING)

  user User[]

  notification Notification?
}

enum NotificationStatus {
  UNREAD
  READ
}

model Notification {
  id      Int    @id @default(autoincrement())
  message String

  notificationStatus NotificationStatus? @default(UNREAD)

  trainRideId Int?
  trainRide   TrainRide? @relation(fields: [trainRideId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}
